/**
 * Module dependencies
 */
var express = require('express'),
    app = module.exports = express(),
    router = require('./routes'),
    http = require('http'),
    path = require('path'),
    rest = require('epilogue'),
    models = require('./models'),
    bodyParser = require('body-parser'),
    methodOverride = require('method-override'),
    morgan = require('morgan'),
    router = express.Router(),
    passport = require('passport'),
    errorhandler = require('errorhandler'),
    oauth2 = require('./oauth2');

/**
 * Configuration
 */

// all environments
app.set('port', process.env.PORT || 3000);
app.use(morgan('combined'));
// app.use(methodOverride);
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());
app.use(passport.initialize());

// development only
if (app.get('env') === 'development') {
  app.use(errorhandler())
}

// production only
if (app.get('env') === 'production') {
  // TODO
}

// Secure all api endpoints
app.all('/api/*', passport.authenticate('bearer', { session: false }));

// Initalize auth strategies
require('./auth');

// Initalize routes generated by Epilogue
require('./api').initialize(app);

// OAuth route
app.post('/oauth/token', oauth2.token);

/**
 * Create Server
 */
var server = http.createServer(app);

// Create database and start server
models.sequelize
  .sync()
  .then(function() {
    server.listen(app.get('port'), function() {
      console.log('Express server listening on port ' + server.address().port);
    });
  });